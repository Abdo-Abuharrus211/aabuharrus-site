---
import NavMenu from "./navMenu.astro";
---

<nav>
  <div class="navbar">
    <div>
      <a href="/">
        <h2>Abdu Abuharrus</h2>
      </a>
    </div>

    <div class="nav-links">
      <button
        id="theme-toggle"
        class="theme-toggle"
        onclick="theme"
        tabindex="0"
        aria-label="theme toggle"
      >
        <!-- Moon twinkle -->
        <svg
          id="moon-icon"
          xmlns="http://www.w3.org/2000/svg"
          aria-hidden="true"
          width="24"
          height="24"
          viewBox="0 0 24 24"
          ><g
            fill="none"
            stroke="currentColor"
            stroke-dasharray="4"
            stroke-dashoffset="4"
            stroke-linecap="round"
            stroke-linejoin="round"
            stroke-width="1"
            ><path d="M13 4h1.5M13 4h-1.5M13 4v1.5M13 4v-1.5"
              ><animate
                id="lineMdMoonAltLoop0"
                fill="freeze"
                attributeName="stroke-dashoffset"
                begin="0.7s;lineMdMoonAltLoop0.begin+6s"
                dur="0.4s"
                values="4;0"></animate><animate
                fill="freeze"
                attributeName="stroke-dashoffset"
                begin="lineMdMoonAltLoop0.begin+2s;lineMdMoonAltLoop0.begin+4s"
                dur="0.4s"
                values="4;0"></animate><animate
                fill="freeze"
                attributeName="stroke-dashoffset"
                begin="lineMdMoonAltLoop0.begin+1.2s;lineMdMoonAltLoop0.begin+3.2s;lineMdMoonAltLoop0.begin+5.2s"
                dur="0.4s"
                values="0;4"></animate><set
                fill="freeze"
                attributeName="d"
                begin="lineMdMoonAltLoop0.begin+1.8s"
                to="M12 5h1.5M12 5h-1.5M12 5v1.5M12 5v-1.5"></set><set
                fill="freeze"
                attributeName="d"
                begin="lineMdMoonAltLoop0.begin+3.8s"
                to="M12 4h1.5M12 4h-1.5M12 4v1.5M12 4v-1.5"></set><set
                fill="freeze"
                attributeName="d"
                begin="lineMdMoonAltLoop0.begin+5.8s"
                to="M13 4h1.5M13 4h-1.5M13 4v1.5M13 4v-1.5"></set></path
            ><path d="M19 11h1.5M19 11h-1.5M19 11v1.5M19 11v-1.5"
              ><animate
                id="lineMdMoonAltLoop1"
                fill="freeze"
                attributeName="stroke-dashoffset"
                begin="1.1s;lineMdMoonAltLoop1.begin+6s"
                dur="0.4s"
                values="4;0"></animate><animate
                fill="freeze"
                attributeName="stroke-dashoffset"
                begin="lineMdMoonAltLoop1.begin+2s;lineMdMoonAltLoop1.begin+4s"
                dur="0.4s"
                values="4;0"></animate><animate
                fill="freeze"
                attributeName="stroke-dashoffset"
                begin="lineMdMoonAltLoop1.begin+1.2s;lineMdMoonAltLoop1.begin+3.2s;lineMdMoonAltLoop1.begin+5.2s"
                dur="0.4s"
                values="0;4"></animate><set
                fill="freeze"
                attributeName="d"
                begin="lineMdMoonAltLoop1.begin+1.8s"
                to="M17 11h1.5M17 11h-1.5M17 11v1.5M17 11v-1.5"></set><set
                fill="freeze"
                attributeName="d"
                begin="lineMdMoonAltLoop1.begin+3.8s"
                to="M18 12h1.5M18 12h-1.5M18 12v1.5M18 12v-1.5"></set><set
                fill="freeze"
                attributeName="d"
                begin="lineMdMoonAltLoop1.begin+5.8s"
                to="M19 11h1.5M19 11h-1.5M19 11v1.5M19 11v-1.5"></set></path
            ><path d="M19 4h1.5M19 4h-1.5M19 4v1.5M19 4v-1.5"
              ><animate
                id="lineMdMoonAltLoop2"
                fill="freeze"
                attributeName="stroke-dashoffset"
                begin="2s;lineMdMoonAltLoop2.begin+6s"
                dur="0.4s"
                values="4;0"></animate><animate
                fill="freeze"
                attributeName="stroke-dashoffset"
                begin="lineMdMoonAltLoop2.begin+2s"
                dur="0.4s"
                values="4;0"></animate><animate
                fill="freeze"
                attributeName="stroke-dashoffset"
                begin="lineMdMoonAltLoop2.begin+1.2s;lineMdMoonAltLoop2.begin+3.2s"
                dur="0.4s"
                values="0;4"></animate><set
                fill="freeze"
                attributeName="d"
                begin="lineMdMoonAltLoop2.begin+1.8s"
                to="M20 5h1.5M20 5h-1.5M20 5v1.5M20 5v-1.5"></set><set
                fill="freeze"
                attributeName="d"
                begin="lineMdMoonAltLoop2.begin+5.8s"
                to="M19 4h1.5M19 4h-1.5M19 4v1.5M19 4v-1.5"></set></path
            ></g
          ><path
            fill="none"
            stroke="currentColor"
            stroke-dasharray="56"
            stroke-dashoffset="56"
            stroke-linecap="round"
            stroke-linejoin="round"
            stroke-width="2"
            d="M7 6 C7 12.08 11.92 17 18 17 C18.53 17 19.05 16.96 19.56 16.89 C17.95 19.36 15.17 21 12 21 C7.03 21 3 16.97 3 12 C3 8.83 4.64 6.05 7.11 4.44 C7.04 4.95 7 5.47 7 6 Z"
            ><animate
              fill="freeze"
              attributeName="stroke-dashoffset"
              dur="0.6s"
              values="56;0"></animate></path
          ></svg
        >

        <!-- Sun -->
        <svg
          id="sun-icon"
          aria-hidden="true"
          xmlns="http://www.w3.org/2000/svg"
          width="24"
          height="24"
          viewBox="0 0 24 24"
        >
          <g
            fill="none"
            stroke="currentColor"
            stroke-linecap="round"
            stroke-linejoin="round"
            stroke-width="2"
          >
            <path
              stroke-dasharray="2"
              stroke-dashoffset="2"
              d="M12 19v1M19 12h1M12 5v-1M5 12h-1"
            >
              <animate
                fill="freeze"
                attributeName="d"
                begin="0.3s"
                dur="0.1s"
                values="M12 19v1M19 12h1M12 5v-1M5 12h-1;M12 21v1M21 12h1M12 3v-1M3 12h-1"
              ></animate>
              <animate
                fill="freeze"
                attributeName="stroke-dashoffset"
                begin="0.3s"
                dur="0.1s"
                values="2;0"></animate>
            </path>
            <path
              stroke-dasharray="2"
              stroke-dashoffset="2"
              d="M17 17l0.5 0.5M17 7l0.5 -0.5M7 7l-0.5 -0.5M7 17l-0.5 0.5"
            >
              <animate
                fill="freeze"
                attributeName="d"
                begin="0.4s"
                dur="0.1s"
                values="M17 17l0.5 0.5M17 7l0.5 -0.5M7 7l-0.5 -0.5M7 17l-0.5 0.5;M18.5 18.5l0.5 0.5M18.5 5.5l0.5 -0.5M5.5 5.5l-0.5 -0.5M5.5 18.5l-0.5 0.5"
              ></animate>
              <animate
                fill="freeze"
                attributeName="stroke-dashoffset"
                begin="0.4s"
                dur="0.1s"
                values="2;0"></animate>
            </path>
            <animateTransform
              attributeName="transform"
              dur="15s"
              repeatCount="indefinite"
              type="rotate"
              values="0 12 12;360 12 12"></animateTransform>
          </g>
          <mask id="lineMdMoonAltToSunnyOutlineLoopTransition0">
            <circle cx="12" cy="12" r="12" fill="#fff"></circle>
            <circle cx="12" cy="12" r="8">
              <animate fill="freeze" attributeName="r" dur="0.2s" values="8;4"
              ></animate>
            </circle>
            <circle cx="18" cy="6" r="12" fill="#fff">
              <animate
                fill="freeze"
                attributeName="cx"
                dur="0.2s"
                values="18;22"></animate>
              <animate fill="freeze" attributeName="cy" dur="0.2s" values="6;2"
              ></animate>
              <animate fill="freeze" attributeName="r" dur="0.2s" values="12;3"
              ></animate>
            </circle>
            <circle cx="18" cy="6" r="10">
              <animate
                fill="freeze"
                attributeName="cx"
                dur="0.2s"
                values="18;22"></animate>
              <animate fill="freeze" attributeName="cy" dur="0.2s" values="6;2"
              ></animate>
              <animate fill="freeze" attributeName="r" dur="0.2s" values="10;1"
              ></animate>
            </circle>
          </mask>
          <circle
            cx="12"
            cy="12"
            r="10"
            mask="url(#lineMdMoonAltToSunnyOutlineLoopTransition0)"
            fill="currentColor"
          >
            <animate fill="freeze" attributeName="r" dur="0.2s" values="10;6"
            ></animate>
          </circle>
        </svg>
      </button>
      <a href="#Bio">Bio</a>
      <a href="#Projects">Projects</a>
      <button
        class="outline-btn"
        onclick="document.getElementById('Contact')?.scrollIntoView({behavior: 'smooth'});"
        >Contact</button
      >
    </div>
    <div class="menu hidden" aria-hidden="true">
      <button id="menu-btn" class="outline-btn">
        <svg
          xmlns="http://www.w3.org/2000/svg"
          width="1em"
          height="1em"
          viewBox="0 0 24 24"
          ><path
            fill="none"
            stroke="currentColor"
            stroke-linecap="round"
            stroke-linejoin="round"
            stroke-width="2"
            d="M4 12h16M4 18h16M4 6h16"></path></svg
        >
      </button>
    </div>
  </div>
</nav>

<style>
  .navbar {
    display: flex;
    align-items: center;
    justify-content: space-between;
    padding: var(--spacing2);
    background-color: var(--subbackground);
    /* These lines fix the navbar to the top */
    position: fixed;
    top: 0;
    left: 0;
    width: 100%;
    z-index: 1000;
  }

  .nav-links {
    margin: auto var(--spacing5);
  }

  .nav-links > a {
    margin: var(--spacing3);
    font-size: var(--fsize2);
    color: var(--text);
  }

  .nav-links > a:hover {
    color: var(--accent);
  }

  .theme-toggle {
    vertical-align: middle;
    padding: 0;
    background-color: transparent;
    color: var(--accent);
  }

  @media (max-width: 900px) {
    .nav-links {
      display: none;
    }

    .menu {
      display: block;
      margin: auto var(--spacing3);
    }
  }
</style>

<script is:inline>
  // Theme toggle handling
  const theme = (() => {
    console.log("theme ran");
    const localStorageTheme = localStorage?.getItem("theme") ?? "";
    if (["dark", "light"].includes(localStorageTheme)) {
      return localStorageTheme;
    }
    if (window.matchMedia("(prefers-color-scheme: light)").matches) {
      console.log("match yeh");
      return "light";
    }
    return "dark";
  })();

  // Apply theme based on what's stored or preferred and display appropriate icon
  if (theme === "dark") {
    document.documentElement.classList.remove("light");
    document.getElementById("moon-icon").classList.add("hidden");
    document.getElementById("sun-icon").classList.remove("hidden");
  } else {
    document.documentElement.classList.add("light");
    document.getElementById("moon-icon").classList.remove("hidden");
    document.getElementById("sun-icon").classList.add("hidden");
  }

  window.localStorage.setItem("theme", theme);

  const handleToggleClick = () => {
    // Toggle the icons' visibility upon user change
    document.getElementById("sun-icon").classList.toggle("hidden");
    document.getElementById("moon-icon").classList.toggle("hidden");

    const element = document.documentElement;
    element.classList.toggle("light");
    const isLight = element.classList.contains("light");
    localStorage.setItem("theme", isLight ? "light" : "dark");
  };

  document
    .getElementById("theme-toggle")
    ?.addEventListener("click", handleToggleClick);
</script>
